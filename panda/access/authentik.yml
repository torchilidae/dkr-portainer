services:
  authentik_db:
    image: postgres:16.4-alpine3.20
    container_name: authentik_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 30s
      interval: 10s
      retries: 5
      timeout: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      TZ: America/Phoenix
      POSTGRES_USER: ${POSTGRES_USER:-authentik}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error}
      POSTGRES_DB: ${POSTGRES_DB:-authentik}
  authentik_redis:
    image: redis:7.4.0-alpine
    container_name: authentik_redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik_redis:/data
  authentik_server:
    image: ghcr.io/goauthentik/server:2024.8.1
    container_name: authentik_server
    restart: unless-stopped
    command: server
    environment:
      TZ: America/Phoenix
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_db
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD:?error}
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
    ports:
      - 9000:9000
      - 9443:9443
    depends_on:
      - postgres
      - redis
  authentik_worker:
    image: ghcr.io/goauthentik/server:2024.8.1
    container_name: authentik_worker
    restart: unless-stopped
    command: worker
    environment:
      TZ: America/Phoenix
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_db
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD:?error}
    # user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
    depends_on:
      - postgres
      - redis
volumes:
  authentik_db:
    external: true
  authentik_redis:
    external: true
  authentik_media:
    external: true
  authentik_certs:
    external: true
  authentik_templates:
    external: true

networks:
  traefik_internal:
    external: true