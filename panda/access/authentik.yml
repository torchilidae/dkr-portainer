services:
  authentik_db:
    image: postgres:17.0-alpine3.20
    container_name: authentik_db
    restart: unless-stopped
    networks:
      - access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 30s
      interval: 10s
      retries: 5
      timeout: 10s
    volumes:
      - authentik_db:/var/lib/postgresql/data
      - authentik_dump:/var/lib/postgresql/dump
    env_file:
      - ../.env/.env.default
      - ../.env/access/.env.authentik_db 
  authentik_bkp:
    image: postgres:17.0-alpine3.20
    container_name: authentik_bkp
    restart: unless-stopped
    networks:
      - access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 30s
      interval: 10s
      retries: 5
      timeout: 10s
    volumes:
      - authentik_bkp:/var/lib/postgresql/data
      - authentik_dump:/var/lib/postgresql/dump
    env_file:
      - ../.env/.env.default
      - ../.env/access/.env.authentik_db 
  authentik_redis:
    image: redis:7.4.1-alpine
    container_name: authentik_redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - access
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik_redis:/data
  authentik_server:
    image: ghcr.io/goauthentik/server:2024.10.0
    container_name: authentik_server
    restart: unless-stopped
    command: server
    networks:
      - access
      - internal_ui
    env_file:
      - ../.env/.env.default
      - ../.env/access/.env.authentik
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.service=authentik"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls.certresolver=myresolver"
      - "traefik.http.routers.authentik.rule=Host(`authentik.panda.tsphotoclicks.net`)"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
    depends_on:
      - authentik_db
      - authentik_redis
  authentik_worker:
    image: ghcr.io/goauthentik/server:2024.10.0
    container_name: authentik_worker
    restart: unless-stopped
    command: worker
    networks:
      - access
    env_file:
      - ../.env/.env.default
      - ../.env/access/.env.authentik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
    depends_on:
      - authentik_db
      - authentik_redis
volumes:
  authentik_db:
    external: true
  authentik_redis:
    external: true
  authentik_media:
    external: true
  authentik_certs:
    external: true
  authentik_templates:
    external: true
  authentik_bkp:
    external: true
  authentik_dump:
    external: true 

networks:
  internal_ui:
    external: true
  access:
    external: true