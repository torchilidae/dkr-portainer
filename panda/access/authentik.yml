services:
  authentik_db:
    image: postgres:16.4-alpine3.20
    container_name: authentik_db
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 30s
      interval: 10s
      retries: 5
      timeout: 10s
    volumes:
      - authentik_db:/var/lib/postgresql/data
    environment:
      - "TZ=America/Phoenix"
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
  authentik_redis:
    image: redis:7.4.0-alpine
    container_name: authentik_redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik_redis:/data
  authentik_server:
    image: ghcr.io/goauthentik/server:2024.8.1
    container_name: authentik_server
    restart: unless-stopped
    command: server
    networks:
      - backend
      - traefik_internal
    environment:
      - "TZ=America/Phoenix"
      - "AUTHENTIK_REDIS__HOST=authentik_redis"
      - "AUTHENTIK_POSTGRESQL__HOST=authentik_db"
      - "AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}"
      - "AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}"
      - "AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}"
      - "AUTHENTIK_ERROR_REPORTING__ENABLED=true"
      - "AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}"
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.service=authentik"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls.certresolver=myresolver"
      - "traefik.http.routers.authentik.rule=Host(`authentik.panda.tsphotoclicks.net`)"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
    depends_on:
      - authentik_db
      - authentik_redis
  authentik_worker:
    image: ghcr.io/goauthentik/server:2024.8.1
    container_name: authentik_worker
    restart: unless-stopped
    command: worker
    networks:
      - backend
    environment:
      - "TZ=America/Phoenix"
      - "AUTHENTIK_REDIS__HOST=authentik_redis"
      - "AUTHENTIK_POSTGRESQL__HOST=authentik_db"
      - "AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}"
      - "AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}"
      - "AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}"
      - "AUTHENTIK_ERROR_REPORTING__ENABLED=true"
      - "AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
    depends_on:
      - authentik_db
      - authentik_redis
volumes:
  authentik_db:
    external: true
  authentik_redis:
    external: true
  authentik_media:
    external: true
  authentik_certs:
    external: true
  authentik_templates:
    external: true

networks:
  traefik_internal:
    external: true
  backend:
    external: true